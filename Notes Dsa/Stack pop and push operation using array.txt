#include<stdio.h>
#include<stdlib.h>

struct Stack
{
    int size; // max size of the array
    int top; //top points at the index of the array
    int *arr; //array pointer
};

int isEmpty(struct Stack * ptr){
    if (ptr->top ==-1)
    {
        return 1;
    }
    return 0;
}

int isFull(struct Stack * ptr){
    if (ptr->top == ptr->size-1)
    {
        return 1;
    }
    return 0;
    
}

void push(struct Stack * ptr, int value){
    if (isFull(ptr))
    {
        printf("Stack Overflow.");
        
    }
    else
    {
        ptr->top++;
        ptr->arr[ptr->top] = value;
    }   
}

int pop(struct Stack * ptr){
    if (isEmpty(ptr))
    {
        printf("Stack Underflow.");
        return -1;
    }
    else{
        int val = ptr->arr[ptr->top];

        ptr->top--;
        return val;
    }
}


    
    



int main()
{
    struct Stack *s;
    s = (struct Stack *) malloc(sizeof(struct Stack));

    s->size = 10;
    s->top = -1; //when array or stack is empty
    s->arr = (int *) malloc(s->size * sizeof(int));

    // if (isEmpty(s))
    // {
    //     printf("Stack underflow.\n");
    // }


    printf(" %d\n", isEmpty(s));
    printf(" %d\n", isFull(s));

    push(s, 3);
    push(s, 6);
    push(s, 9);
    push(s, 12);
    push(s, 15);
    printf(" %d\n", isEmpty(s));
    printf(" %d\n", isFull(s));


    printf("Popped %d from the stack", pop(s));
    printf("Popped %d from the stack", pop(s));
    

    return 0;
}
