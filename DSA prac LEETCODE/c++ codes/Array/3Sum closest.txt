#include<iostream>
#include<map>
#include <unordered_map>
#include<vector>
#include <numeric>
#include <set>
#include <algorithm>

using namespace std;

int threeSumClosest(vector<int> & nums, int target){
    int ans;
    int diff = INT_MAX;
    sort(nums.begin(), nums.end());
    for (int i = 0; i < nums.size()-2; i++)
    {
        int first = nums[i];
        int st = i+1;
        int end = nums.size()-1;
        
        while (st<end)
        {
            if(first+nums[st]+nums[end]==target) return target;
            else if(abs(first+nums[st]+nums[end]-target)<diff){
                diff = abs(first+nums[st]+nums[end]-target);
                ans = first+nums[st]+nums[end];
            }
            if(first+nums[st]+nums[end]>target) end--;
            else st++;    
        }
        
    }
    return ans;
    
}

int main()
{

    vector<int> vec = {-1,2,1,-4};
    // vector<int> vec = {1, 1 ,1 ,0};
    int tar = 1;

    int ans = threeSumClosest(vec, tar);
    cout<<ans<<endl;


    return 0;
}

