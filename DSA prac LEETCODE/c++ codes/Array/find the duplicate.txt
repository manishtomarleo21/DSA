#include<iostream>
#include<map>
#include <unordered_map>
#include<vector>
#include <numeric>
#include <set>
#include <algorithm>

using namespace std;


int findDuplicate(vector<int>& nums) {
   //this is the same algo from which we find loop in linked list
   //slow and fast pointer

    int slow = nums[0];
    int fast = nums[0];

    do
    {
        slow = nums[slow];
        fast = nums[nums[fast]];

    } while (slow!=fast);
    
    fast = nums[0];

    while (slow!=fast)
    {
        slow = nums[slow];
        fast = nums[fast];
    }
    return slow;

}

int main()
{

    // vector<vector<int>> vec = {{0,1,0}, {0,0,1}, {1,1,1}, {0,0,0}};
    vector<int> vec = {1,3,4,2,2};

    int ans = findDuplicate(vec);

    cout<<ans<<endl;

    return 0;
}

