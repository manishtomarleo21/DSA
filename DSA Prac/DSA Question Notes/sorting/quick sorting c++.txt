#include <set>
#include <iostream>
#include <algorithm>
#include <bits/stdc++.h>
#include <stack>
#include <cstring>
#include <string>

using namespace std;

void printVec(vector<int> &arr, int start, int end){
    for(int i = start; i <= end; i++)
        cout << arr[i] << " ";
    cout << endl; 
}

int partitionFunc(vector<int> &arr, int low, int high){

    int i = low;
    vector<int> left;
    vector<int> right;
    int pivot = arr[low];
    //assuming all numbers are different.
    for (int j = low+1; j <= high; j++) {
        if (arr[j] < pivot)
            left.push_back(arr[j]);
        else if (arr[j] > pivot)
            right.push_back(arr[j]);
    }
    for (int num : left)
        arr[i++] = num;
    arr[i++] = pivot;
    for (int num : right)
        arr[i++] = num;
    return low + left.size();

}


void quickSort(vector<int> &arr, int low, int high) {

  int partitionIndex;
  if(low<high){
      partitionIndex = partitionFunc(arr, low, high);
      quickSort(arr, low, partitionIndex-1);
      quickSort(arr, partitionIndex+1, high);
      printVec(arr, low, high);
      
  }
  
    
  
}


int main()
{

  // int n = 15;
  vector<int> vec = {5, 8, 1, 3, 7, 9, 2 };
  int low = 0;
  int high = vec.size()-1;
  quickSort(vec, low, high);
  // for(int x: vec) cout<<x<<" ";



  return 0;
}
