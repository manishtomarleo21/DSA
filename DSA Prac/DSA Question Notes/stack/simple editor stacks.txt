#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#include <stack>
#include <sstream>
using namespace std;


void simpleTextEditor(vector<string> queries, int n){
    string str = "";
    stack<string> st;
    int q;
    string toAdd;
    int toDelorPrnt;

    for (int i = 0; i < n; i++)
    {
        stringstream ss;
        ss<<queries[i];
        ss>>q;

        switch (q)
        {
        case 1:
            ss>>toAdd;
            st.push(str);
            str.append(toAdd);
            break;

        case 2:
            ss>>toDelorPrnt;
            st.push(str);
            str.erase(str.length()-toDelorPrnt);

            // if (str.length()>0)
            // {
            //     string curr ="";
            //     int currVal = str.length()-toDelorPrnt;
            //     for (int i = 0; i < currVal; i++)
            //     {
            //         curr+=str[i];
            //     }
            //     str=curr;
            // }
            
            break;
            case 3:
                ss>>toDelorPrnt;
                cout<<str[toDelorPrnt-1]<<endl;

                break;
            case 4:
                if (!st.empty())
                {
                    str = st.top();
                    st.pop();
                }
                break;
        
        default:
            break;
        }
        
    }
    
}

int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   

    int n = 8;
    // cin>>n;
    // cin.ignore();
    // vector<string> queries(n);
    // for (int i = 0; i < n; i++)
    // {
    //     getline(cin, queries[i]);
    // }


    vector<string> queries = {"1 abc", "3 3", "2 3", "1 xy", "3 2", "4", "4", "3 1"};
    simpleTextEditor(queries, n);
    


    return 0;
}

//optimized solution

#include <bits/stdc++.h>
#include<sstream>

using namespace std;



int main()
{
   int inp;
   cin>>inp;
   string str = "";
    stack<string> st;
   while (inp--)
   {
        int n;cin>>n;
        if (n==1)
        {
            string toAdd;cin>>toAdd;
            st.push(str);
            str+=toAdd;
        }
        else if(n==2){
            int toDelorPrnt;cin>>toDelorPrnt;
            st.push(str);
            str.erase(str.length()-toDelorPrnt);
        }
        else if(n==3){
            int toDelorPrnt;cin>>toDelorPrnt;
            cout<<str[toDelorPrnt-1]<<endl;
        }
        else{
            str = st.top();
            st.pop();
        }
   }
   

    return 0;
}


/*
8       
1 abc   
3 3     
2 3     
1 xy
3 2
4 
4 
3 1


*/